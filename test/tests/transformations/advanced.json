[
  {
    "name": "Inline - Multiple inline functions (1)",
    "given": {
      "input": "text",
      "definition": "$$substring(1,3):$$wrap(>):$"
    },
    "expect": {
      "equal": "te"
    }
  },
  {
    "name": "Inline - Multiple inline functions (2)",
    "given": {
      "input": "text",
      "definition": "$$wrap(>):$$substring(1,3):$"
    },
    "expect": {
      "equal": ">ex"
    }
  },
  {
    "name": "Inline - Multiple inline functions (3)",
    "given": {
      "input": "text",
      "definition": "$$join(s):$$split(x):$"
    },
    "expect": {
      "equal": "test"
    }
  },
  {
    "name": "Mixed - Multiple object functions",
    "given": {
      "input": null,
      "definition": {
        "$$distinct": { "$$flat": [ "$$split:abcd", "$$split:def" ] }
      }
    },
    "expect": {
      "equal": [ "a", "b", "c", "d", "e", "f"]
    }
  },
  {
    "name": "Inline - inner failure (even though $$partition fails, $$string picks up the null and transforms it)",
    "given": {
      "input": [1],
      "definition": "$$string(true):$$partition(0):$"
    },
    "expect": {
      "equal": "null"
    }
  },
  {
    "name": "Function context nesting",
    "given": {
      "input": null,
      "definition": {
        "$$map": [ [true, "a"], [true, "b"], [false, "c"] ],
        "to": {
          "$$map": "##current",
          "context": {
            "##map":"##current"
          },
          "to": {
            "$$if": "##map[0]",
            "then": "$$upper:##map[1]",
            "else": "$$upper:##current"
          }
        }
      }
    },
    "expect": {
      "equal": [["A", "A"], ["B", "B"], ["FALSE", "C"]]
    }
  },
  {
    "name": "Mixed - playground sample",
    "given": {
      "input": {
        "first_name": "John",
        "last_name": "Doe",
        "date_of_birth": "1980-01-01"
      },
      "definition": {
        "*": "$",
        "full_name": {
          "$$join": ["$.first_name", " ", "$.last_name"]
        },
        "age": {
          "$$math": [
            {
              "$$math": [
                "$$date(EPOCH):#now",
                "-",
                "$$date(EPOCH):$.date_of_birth"
              ]
            },
            "//",
            "$$math(365,*,86400)"
          ]
        }
      }
    },
    "expect": {
      "equal": {
        "age": 45,
        "date_of_birth": "1980-01-01",
        "first_name": "John",
        "full_name": "John Doe",
        "last_name": "Doe"
      }
    }
  }
]